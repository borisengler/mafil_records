{"version":3,"sources":["assets/images/mafil-logo.png","oidcConfig.ts","components/common/CommonCard.tsx","components/common/Message.tsx","contexts/SidebarContext.tsx","components/common/Logo.tsx","components/global/AppBar.tsx","components/global/AppBarContent.tsx","components/global/SidebarContent.tsx","components/global/ResizableSidebar.tsx","components/common/Buttons.tsx","components/common/InfoItem.tsx","components/common/LoadingBox.tsx","components/common/LoginButton.tsx","pages/Landing.tsx","components/common/RefreshButton.tsx","components/common/Inputs.tsx","components/common/ListItems.tsx","components/common/SaveButton.tsx","components/common/SortButton.tsx","utils/DatabaseFetchers.tsx","components/series/Series.tsx","utils/PACSFetchers.tsx","utils/WithAuthentication.tsx","utils/RemoveSeriesFromLocalStorage.tsx","utils/RemoveStudiesFromLocalStorage.tsx","utils/Savers.tsx","pages/Measuring.tsx","pages/OidcCallback.tsx","pages/OidcLogout.tsx","components/studies/DateRangeSelector.tsx","components/studies/Study.tsx","pages/Studies.tsx","pages/SuccessfulVisit.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","oidcConfig","authority","client_id","client_secret","process","REACT_APP_CLIENT_SECRET","redirect_uri","response_type","scope","post_logout_redirect_uri","automaticSilentRenew","Attribute","_ref","title","text","React","createElement","Grid","item","xs","lg","Box","sx","fontWeight","ExpandMore","styled","props","expand","other","_objectWithoutProperties","IconButton","_ref2","theme","transform","marginLeft","transition","transitions","create","duration","shortest","CommonCard","_ref3","children","Card","padding","margin","display","flexDirection","Message","error","justifyContent","textAlign","SidebarContext","createContext","sidebarWidth","setSidebarWidth","SidebarProvider","_useState","useState","storedWidth","localStorage","getItem","parseInt","_useState2","_slicedToArray","useEffect","setItem","toString","Provider","value","Logo","src","logo","alt","height","width","AppBar","MuiAppBar","shouldForwardProp","prop","open","_objectSpread","zIndex","drawer","sidebarOpen","concat","calculateWidth","AppBarContent","pageTitle","content","toggleDrawer","useContext","showLogo","setShowLogo","_useState3","_useState4","showTitle","setShowTitle","handleResize","windowWidth","window","innerWidth","rightSectionWidth","addEventListener","removeEventListener","position","Toolbar","pr","edge","color","onClick","marginRight","MenuIcon","SidebarContent","gap","overflow","ResizableSidebar","sidebarRef","useRef","_React$useContext","isResizing","setIsResizing","maxWidth","setMaxWidth","handleOrientationChange","updateMaxWidth","newMaxWidth","updateWidth","newWidth","startResizing","useCallback","mouseDownEvent","preventDefault","stopResizing","resizeMouse","mouseMoveEvent","current","clientX","getBoundingClientRect","left","resizeTouch","touchMoveEvent","touches","ref","className","minWidth","overflowX","alignItems","px","ChevronLeftIcon","Divider","onMouseDown","onTouchStart","BlueButton","path","button","Button","variant","Link","to","style","textDecoration","RedButton","InfoItem","label","wordBreak","SmallLoadingBox","loadingMessage","CircularProgress","thickness","size","LoadingBox","LoginButton","auth","useAuth","navigate","useNavigate","activeNavigator","isLoading","user","Fragment","profile","name","signoutSilent","signinRedirect","Landing","useTheme","_React$useState","_React$useState2","setOpen","CommonAppBar","flexGrow","minHeight","mixins","toolbar","RefreshButton","fetchStatus","tooltipTitle","RefreshIcon","icon","setIcon","CheckCircleIcon","setTimeout","ErrorIcon","Tooltip","SingleLineInput","onChange","TextField","key","event","fullWidth","MultiLineInput","multiline","maxRows","ListItems","loading","list","errorMessage","component","SaveButton","saveStatus","SaveOutlinedIcon","SortButton","sortOrder","tooltipText","ArrowDownwardIcon","ArrowUpwardIcon","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","getStudyData","_x","_getStudyData","apply","arguments","_asyncToGenerator","_callee","study_instance_uid","studyData","response","_context","JSON","parse","fetch","mode","ok","json","general_comment","getSeriesData","_x2","_getSeriesData","_callee2","seriesInstanceUID","seriesData","_context2","series_instance_uid","seq_state","is_selected","is_expanded","measured","Date","toISOString","last_updated","measurement_notes","stim_protocol","stim_log_file","fyzio_raw_file","general_eeg","general_et","bp_ekg","bp_resp","bp_gsr","bp_acc","siemens_ekg","siemens_resp","siemens_gsr","siemens_acc","SeriesSingleLineInput","m","SeriesMultiLineInput","Series","CheckboxInput","checked","FormControlLabel","control","Checkbox","handleCheckboxChange","SeriesInstanceUID","setSeriesData","_ref4","fetchedSeriesData","fetchData","stringify","_defineProperty","target","handleTextChange","_event$target","mb","flexWrap","Math","max","SeriesDescription","SeriesNumber","fontSize","whiteSpace","toLocaleString","NumberOfSeriesRelatedInstances","CardActions","disableSpacing","onCopy","ContentCopyIcon","copyFromSeriesId","onPaste","copyFromSeriesStr","copy","ContentPasteIcon","background","Select","defaultValue","MenuItem","aria-expanded","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","fetchStudies","_fetchStudies","dateRange","url","resp","visits","parsedVisits","start","end","map","visit","parsedDate","StudyDate","substr","t0","fetchSeries","_fetchSeries","accessionNumber","series","console","withAuthentication","WrappedComponent","isAuthenticated","Navigate","replace","removeSeriesFromLocalStorage","filter","startsWith","removeItem","removeStudiesFromLocalStorage","saveSeriesData","_saveSeriesData","StudyInstanceUID","success","seriesKeys","seriesDataArray","headers","Content-Type","body","saveStudyData","_saveStudyData","studyDataString","studyDataArray","ProtectedMeasuring","setSortOrder","seriesJson","setSeriesJson","_React$useState3","_React$useState4","selectedSeqId","setSelectedSeqId","_useState5","_useState6","setLoading","_useState7","_useState8","setSaveStatus","_useState9","_useState10","setFetchStatus","_useState11","_useState12","fetchError","setFetchError","saveRecords","_saveRecords","seriesSuccess","studySuccess","_fetchData","_callee3","currentStudyString","currentStudy","_context3","AccessionNumber","sort","b","interval","setInterval","clearInterval","_handleFinishStudy","_callee4","_context4","_handleBackToStudies","_callee5","_context5","handleSeriesCopy","seqId","handleSeriesPaste","_useState13","localStudy","_useState14","_useState15","_useState16","setStudyData","fetchedStudyData","log","newSortOrder","sortedData","_toConsumableArray","PatientName","my","SequenceFileName","AcquisitionMatrix","BodyPartExamined","FlipAngle","ImageType","InversionTime","OperatorsName","PAT","PatientPosition","PercentPhaseFieldOfView","ProtocolName","RepetitionTime","SOPClassUID","SeriesTime","SliceThickness","SoftwareVersions","SpacingBetweenSlices","StationName","OIDCCallback","handleUserLoaded","events","addUserLoaded","removeUserLoaded","Container","OidcLogout","formatDateToISOString","date","getTime","dateString","test","DateRangeSelector","setDateRange","currentChoice","setCurrentChoice","setDateRangeChoice","choice","endDate","startDate","setHours","getHours","handleCustomDateChange","FormControl","InputLabel","DatePicker","newValue","Study","InstitutionName","NumberOfStudyRelatedSeries","PatientBirthDate","PatientID","PatientSex","ReferringPhysicianName","StudyTime","StudyDescription","StudyID","toLocaleDateString","ProtectedStudies","studiesJson","setStudiesJson","studies","study","LocalizationProvider","dateAdapter","AdapterDateFns","ProtectedSuccessfulVisit","App","CssBaseline","AuthProvider","BrowserRouter","Routes","Route","element","Studies","Measuring","SuccessfulVisit","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7ccfdac6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mafil-logo.32ab448b.png\";","const oidcConfig = {\n    authority: 'https://oidc.muni.cz/oidc',\n    client_id: '39a00844-84a6-4459-85fb-91d29539088c',\n    client_secret: process.env.REACT_APP_CLIENT_SECRET,\n    redirect_uri: 'https://records.devel.mafildb.ics.muni.cz/oidc-login',\n    response_type: 'code',\n    scope: 'openid profile email eduperson_entitlement',\n    post_logout_redirect_uri: 'https://records.devel.mafildb.ics.muni.cz/oidc-logout',\n    automaticSilentRenew: false\n};\n\nexport default oidcConfig;","import React from 'react';\nimport { Card, IconButton, IconButtonProps } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport { ReactNode } from 'react';\n\ninterface AttributeProps {\n  title: string;\n  text: string;\n}\n\nexport function Attribute({ title, text }: AttributeProps) {\n  return (\n    <Grid item xs={4} lg={4}>\n      <Box\n      >\n        {title}\n      </Box>\n      <Box\n        sx={{\n          fontWeight: 'bold'\n        }}\n      >{text}</Box>\n    </Grid>\n  )\n}\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\n\nexport const ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\ninterface CommonCardProps {\n  children?: ReactNode\n}\n\nfunction CommonCard({ children }: CommonCardProps) {\n  return (\n    <Card\n      sx={{\n        padding: 1,\n        margin: 1,\n        display: 'column',\n        flexDirection: 'row',\n      }}\n    >\n      {children}\n    </Card>\n  )\n}\n\nexport default CommonCard;","import React from \"react\";\nimport { Box } from \"@mui/material\";\nimport CommonCard from \"./CommonCard\";\n\ninterface MessageProps {\n  title: string;\n  text: string;\n  error?: boolean;\n}\n\nfunction Message({ title, text, error }: MessageProps) {\n  return (\n    <CommonCard>\n      <Box sx={{ justifyContent: 'center', textAlign: 'center' }}>\n        <h1>{title}</h1>\n        <Box>{text}</Box>\n      </Box>\n    </CommonCard>\n  )\n}\n\nexport default Message;","import React, { useEffect, useState } from \"react\";\n\nconst SidebarContext = React.createContext<{\n  sidebarWidth: number;\n  setSidebarWidth: React.Dispatch<React.SetStateAction<number>>;\n}>({\n  sidebarWidth: 380,\n  setSidebarWidth: () => { },\n});\n\nexport const SidebarProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [sidebarWidth, setSidebarWidth] = useState(() => {\n    const storedWidth = localStorage.getItem('sidebarWidth');\n    return storedWidth ? parseInt(storedWidth, 10) : 380;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('sidebarWidth', sidebarWidth.toString());\n  }, [sidebarWidth]);\n\n  return (\n    <SidebarContext.Provider value={{ sidebarWidth, setSidebarWidth }}>\n      {children}\n    </SidebarContext.Provider>\n  );\n};\n\nexport default SidebarContext;","import React from \"react\";\nimport logo from \"../../assets/images/mafil-logo.png\";\n\nfunction Logo() {\n  return (\n    <img src={logo} alt=\"logo\" height={45} width={'auto'} />\n  )\n}\n\nexport default Logo;","import MuiAppBar, { AppBarProps } from '@mui/material/AppBar';\nimport { styled } from '@mui/material/styles';\n\ninterface StyledAppBarProps extends AppBarProps {\n  open?: boolean;\n  sidebarWidth: number;\n}\n\nfunction calculateWidth(sidebarOpen: boolean | undefined, sidebarWidth: number) {\n  if (sidebarOpen) {\n    return {\n      marginLeft: sidebarWidth,\n      width: `calc(100% - ${sidebarWidth}px)`,\n    }\n  }\n  return {};\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open' && prop !== 'sidebarWidth',\n})<StyledAppBarProps>(({ theme, open, sidebarWidth }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  ...calculateWidth(open, sidebarWidth),\n}));\n\nexport default AppBar;\n","import MenuIcon from '@mui/icons-material/Menu';\nimport { Box, IconButton, Toolbar } from '@mui/material';\nimport React, { useContext, useEffect, useState } from 'react';\n\nimport SidebarContext from \"../../contexts/SidebarContext\";\nimport Logo from '../common/Logo';\nimport AppBar from './AppBar';\n\ninterface AppBarContentProps {\n  open: boolean;\n  toggleDrawer: () => void;\n  pageTitle?: string;\n  content?: React.ReactNode;\n}\n\nfunction AppBarContent({ open, pageTitle, content, toggleDrawer }: AppBarContentProps) {\n  const { sidebarWidth } = useContext(SidebarContext);\n  const [showLogo, setShowLogo] = useState(true);\n  const [showTitle, setShowTitle] = useState(true);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const windowWidth = window.innerWidth;\n      const rightSectionWidth = windowWidth - sidebarWidth;\n      sidebarWidth / windowWidth <= 0.5 ? setShowLogo(true) : setShowLogo(false);\n      sidebarWidth / windowWidth <= 0.7 ? setShowTitle(true) : setShowTitle(false);\n      if (open && rightSectionWidth < 600) {\n        setShowLogo(false);\n        setShowTitle(false);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [sidebarWidth]);\n\n  return (\n    <AppBar position=\"absolute\" sidebarWidth={sidebarWidth} open={open}>\n      <Toolbar\n        sx={{\n          pr: '28px',\n          justifyContent: 'space-between',\n        }}\n      >\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          onClick={toggleDrawer}\n          sx={{\n            marginRight: '36px',\n            ...(open && { display: 'none' }),\n          }}\n        >\n          <MenuIcon />\n        </IconButton>\n        {showTitle ?\n          <Box>{pageTitle}</Box>\n          : <Box />}\n        {showLogo && <Logo />}\n        <Box>\n          {content}\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppBarContent;\n","import { Box } from '@mui/material';\nimport React from 'react';\n\ninterface SidebarContentProps {\n  children?: React.ReactNode;\n}\n\nfunction SidebarContent({ children }: SidebarContentProps) {\n  return (\n    <Box\n      gap={2}\n      p={2}\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n      sx={{\n        height: '100vh',\n        overflow: 'auto',\n      }}\n    >\n      {children}\n    </Box>\n  );\n}\n\nexport default SidebarContent;\n","import ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport { Box, Divider, IconButton, Toolbar } from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport \"./ResizableSidebar.css\";\n\nimport SidebarContext from \"../../contexts/SidebarContext\";\nimport SidebarContent from \"./SidebarContent\";\n\ninterface ResizableSidebarProps {\n  open: boolean;\n  toggleDrawer: () => void;\n  children?: React.ReactNode;\n}\n\nexport function ResizableSidebar({ open, toggleDrawer, children }: ResizableSidebarProps) {\n  const sidebarRef = useRef<HTMLDivElement | null>(null);\n  const { sidebarWidth, setSidebarWidth } = React.useContext(SidebarContext);\n  const [isResizing, setIsResizing] = useState(false);\n  const [maxWidth, setMaxWidth] = useState(window.innerWidth * 0.75);\n  const minWidth = 150;\n\n  const handleOrientationChange = () => {\n    updateMaxWidth();\n  };\n\n  const updateMaxWidth = () => {\n    const newMaxWidth = window.innerWidth * 0.75;\n    setMaxWidth(newMaxWidth);\n    if (sidebarWidth > newMaxWidth) {\n      setSidebarWidth(newMaxWidth)\n    }\n  };\n\n  const updateWidth = (newWidth: number) => {\n    if (newWidth < minWidth) {\n      setSidebarWidth(minWidth);\n    } else if (newWidth > maxWidth) {\n      setSidebarWidth(maxWidth);\n    } else {\n      setSidebarWidth(newWidth);\n    }\n  };\n\n  const startResizing = React.useCallback((mouseDownEvent: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>) => {\n    mouseDownEvent.preventDefault();\n    setIsResizing(true);\n  }, []);\n\n  const stopResizing = React.useCallback(() => {\n    setIsResizing(false);\n  }, []);\n\n  const resizeMouse = React.useCallback(\n    (mouseMoveEvent: MouseEvent) => {\n      if (isResizing && sidebarRef.current) {\n        const newWidth =\n          mouseMoveEvent.clientX - sidebarRef.current.getBoundingClientRect().left;\n        updateWidth(newWidth);\n      }\n    },\n    [isResizing]\n  );\n\n  const resizeTouch = React.useCallback(\n    (touchMoveEvent: TouchEvent) => {\n      if (isResizing && sidebarRef.current) {\n        const newWidth =\n          touchMoveEvent.touches[0].clientX - sidebarRef.current.getBoundingClientRect().left;\n        updateWidth(newWidth);\n      }\n    },\n    [isResizing]\n  );\n\n  React.useEffect(() => {\n    window.addEventListener('resize', updateMaxWidth);\n    return () => {\n      window.removeEventListener('resize', updateMaxWidth);\n    };\n  }, [updateMaxWidth]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"orientationchange\", handleOrientationChange);\n    return () => {\n      window.removeEventListener(\"orientationchange\", handleOrientationChange);\n    };\n  }, [handleOrientationChange]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"mousemove\", resizeMouse);\n    window.addEventListener(\"mouseup\", stopResizing);\n    window.addEventListener(\"touchmove\", resizeTouch);\n    window.addEventListener(\"touchend\", stopResizing);\n    return () => {\n      window.removeEventListener(\"mousemove\", resizeMouse);\n      window.removeEventListener(\"mouseup\", stopResizing);\n      window.removeEventListener(\"touchmove\", resizeTouch);\n      window.removeEventListener(\"touchend\", stopResizing);\n    };\n  }, [resizeMouse, stopResizing, resizeTouch]);\n\n  return (\n    <Box>\n      <Box\n        ref={sidebarRef}\n        className=\"sidebar\"\n        sx={{\n          width: open ? (isResizing ? sidebarWidth : \"auto\") : 0,\n          minWidth: open ? sidebarWidth : 0,\n          overflowX: \"hidden\",\n        }}\n      >\n        <Box className=\"sidebar-content\">\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <SidebarContent>\n            {children}\n          </SidebarContent>\n        </Box>\n        <Box className=\"sidebar-resizer\" onMouseDown={startResizing} onTouchStart={startResizing} />\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\n\ninterface ButtonsProps {\n  text: string;\n  path?: string;\n  onClick?: () => void;\n}\n\nexport function BlueButton({ text, path, onClick }: ButtonsProps) {\n  const button = (\n    <Button variant='contained' onClick={onClick}>\n      {text}\n    </Button>\n  );\n\n  if (path) {\n    return (\n      <Box>\n        <Link to={path} style={{ textDecoration: 'none' }}>\n          {button}\n        </Link>\n      </Box>\n    );\n  }\n\n  return <Box>{button}</Box>;\n}\n\nexport function RedButton({ text, path, onClick }: ButtonsProps) {\n  const button = (\n    <Button variant='outlined' color='error' onClick={onClick}>\n      {text}\n    </Button>\n  );\n\n  if (path) {\n    return (\n      <Box>\n        <Link to={path} style={{ textDecoration: 'none' }}>\n          {button}\n        </Link>\n      </Box>\n    );\n  }\n\n  return <Box>{button}</Box>;\n}","import React from 'react';\nimport Box from '@mui/material/Box';\n\ninterface Props {\n  label: string;\n  text: string | undefined;\n}\n\nfunction InfoItem({ label, text }: Props) {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}>\n      <Box>\n        {label}\n      </Box>\n      <Box\n        sx={{\n          fontWeight: 'bold',\n          wordBreak: 'break-all'\n        }}\n      >\n        {text ? text : ''}\n      </Box>\n    </Box>\n  )\n}\n\nexport default InfoItem;\n","import React from 'react';\nimport { CircularProgress } from \"@mui/material\";\nimport Box from '@mui/material/Box';\n\ninterface LoadingBoxProps {\n  loadingMessage: string;\n}\n\nexport function SmallLoadingBox({ loadingMessage }: LoadingBoxProps) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"left\",\n        alignItems: \"flex-start\",\n      }}\n    >\n      <Box sx={{ display: \"flex\", alignItems: \"center\", }}>\n        <Box>\n          <CircularProgress color=\"primary\" thickness={8} size={35} />\n        </Box>\n        <Box padding={2}>{loadingMessage}</Box>\n      </Box>\n    </Box >\n  );\n}\n\nfunction LoadingBox({ loadingMessage }: LoadingBoxProps) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"70vh\",\n      }}\n    >\n      <CircularProgress color=\"primary\" thickness={4} size={80} />\n      <Box padding={4}>{loadingMessage}</Box>\n    </Box>\n  );\n}\n\nexport default LoadingBox;\n","import React from \"react\";\nimport { useAuth } from \"react-oidc-context\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { BlueButton, RedButton } from \"./Buttons\";\nimport InfoItem from \"./InfoItem\";\nimport { SmallLoadingBox } from \"./LoadingBox\";\n\nfunction LoginButton() {\n  const auth = useAuth();\n  const navigate = useNavigate();\n\n  function handleLogin() {\n    auth.signinRedirect();\n  }\n\n  function handleLogout() {\n    auth.signoutSilent();\n    navigate('/oidc-logout');\n  }\n\n  switch (auth.activeNavigator) {\n    case \"signinRedirect\":\n    case \"signinSilent\":\n      return <SmallLoadingBox loadingMessage={\"Signing in...\"} />;\n    case \"signoutRedirect\":\n    case \"signoutSilent\":\n      return <SmallLoadingBox loadingMessage={\"Signing out...\"} />;\n  }\n\n  if (auth.isLoading) {\n    return <SmallLoadingBox loadingMessage={\"Loading...\"} />;\n  }\n\n  if (auth.error) {\n    return <SmallLoadingBox loadingMessage={\"Error...\"} />;\n  }\n\n  if (auth.user) {\n    return (\n      <React.Fragment>\n        <InfoItem label=\"Measuring operator\" text={auth.user.profile.name} />\n        <RedButton text='Log out' onClick={handleLogout} />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <InfoItem label=\"Measuring operator\" text=\"Not yet logged in\" />\n      <BlueButton text='Log in' onClick={handleLogin} />\n    </React.Fragment>\n  );\n}\n\nexport default LoginButton;\n","import { Box, Toolbar, useTheme } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { useAuth } from \"react-oidc-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport Message from '../components/common/Message';\nimport CommonAppBar from '../components/global/AppBarContent';\nimport { ResizableSidebar } from '../components/global/ResizableSidebar';\nimport { SidebarProvider } from '../contexts/SidebarContext';\nimport LoginButton from '../components/common/LoginButton';\n\nfunction Landing() {\n  const auth = useAuth();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n  function handleRefresh() { };\n\n  useEffect(() => {\n    if (auth && auth.user) {\n      navigate('/studies');\n    }\n  }, [auth, navigate]);\n\n  return (\n    <SidebarProvider>\n      <React.Fragment>\n        <CommonAppBar\n          open={open}\n          toggleDrawer={toggleDrawer}\n        />\n        <ResizableSidebar\n          open={open}\n          toggleDrawer={toggleDrawer}\n        >\n          <LoginButton />\n        </ResizableSidebar>\n        <Box\n          sx={{\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar sx={{ minHeight: theme.mixins.toolbar.minHeight }} />\n          <Message title='Log in to be able to choose a visit.' text='' />\n        </Box>\n      </React.Fragment >\n    </SidebarProvider>\n  );\n}\n\nexport default Landing;\n","import RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { Badge, CircularProgress, IconButton, Tooltip } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\n\ninterface RefreshButtonProps {\n  onClick?: () => void;\n  fetchStatus?: 'idle' | 'saving' | 'success' | 'failed';\n  tooltipTitle: string;\n}\n\nfunction RefreshButton({ onClick, fetchStatus, tooltipTitle }: RefreshButtonProps) {\n  const [icon, setIcon] = useState<JSX.Element>(<RefreshIcon />);\n\n  useEffect(() => {\n    if (fetchStatus === 'success') {\n      setIcon(<CheckCircleIcon sx={{ color: '#90ee90' }} />);\n      setTimeout(() => setIcon(<RefreshIcon />), 3000);\n    } else if (fetchStatus === 'failed') {\n      setIcon(<ErrorIcon sx={{ color: '#ff7f7f' }} />);\n    } else if (fetchStatus === 'saving') {\n      setIcon(<CircularProgress color=\"inherit\" size={24} thickness={6} />);\n    } else {\n      setIcon(<RefreshIcon />);\n    }\n  }, [fetchStatus]);\n\n  return (\n    <Tooltip title={tooltipTitle}>\n      <IconButton size=\"large\" color=\"inherit\" onClick={onClick}>\n        {icon}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default RefreshButton;","import TextField from '@mui/material/TextField';\nimport React from 'react';\n\nexport interface SingleLineInputProps {\n  name: string;\n  label: string;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n}\n\nexport function SingleLineInput({ name, label, value, onChange }: SingleLineInputProps) {\n  const handleTextChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    onChange(event);\n  };\n\n  return (\n    <TextField\n      key={`${name}-key`}\n      label={label}\n      name={name}\n      value={value}\n      onChange={handleTextChange}\n      fullWidth\n      variant=\"outlined\"\n    />\n  )\n}\n\nexport interface MultiLineInputProps {\n  name: string;\n  label: string;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n}\n\nexport function MultiLineInput({ name, label, value, onChange }: MultiLineInputProps) {\n  const handleTextChange = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    onChange(event);\n  };\n\n  return (\n    <TextField\n      key={`${name}-key`}\n      label={label}\n      name={name}\n      value={value}\n      onChange={handleTextChange}\n      fullWidth\n      multiline\n      variant=\"outlined\"\n      maxRows={5}\n    />\n  )\n}","import { Box, Toolbar, useTheme } from '@mui/material';\nimport React from 'react';\n\nimport LoadingBox from './LoadingBox';\nimport Message from './Message';\n\ninterface ListItemsProps {\n  loading: boolean;\n  list: JSX.Element[];\n  loadingMessage: string;\n  errorMessage: string | null;\n}\n\nconst ListItems: React.FC<ListItemsProps> = ({ loading, list, loadingMessage, errorMessage }) => {\n  const theme = useTheme();\n\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n        flexGrow: 1,\n        overflow: 'auto',\n        height: '100vh',\n      }}\n    >\n      <Toolbar sx={{ minHeight: theme.mixins.toolbar.minHeight }} />\n      {loading ? (\n        <LoadingBox loadingMessage={loadingMessage} />\n      ) : errorMessage ? (\n        <Box flexDirection={'column'}>\n          <Message title='Error' text={errorMessage} />\n          {list}\n        </Box>\n      ) : (\n        <Box flexDirection={'column'}>\n          {list}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default ListItems;\n","import SaveOutlinedIcon from '@mui/icons-material/SaveOutlined';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { CircularProgress, IconButton, Tooltip } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\n\ninterface SaveButtonProps {\n  saveStatus: 'idle' | 'saving' | 'success' | 'failed';\n  onClick?: () => void;\n}\n\nfunction SaveButton({ saveStatus, onClick }: SaveButtonProps) {\n  const [icon, setIcon] = useState<JSX.Element>(<SaveOutlinedIcon />);\n\n  useEffect(() => {\n    if (saveStatus === 'success') {\n      setIcon(<CheckCircleIcon sx={{ color: '#90ee90' }} />);\n      setTimeout(() => setIcon(<SaveOutlinedIcon />), 3000);\n    } else if (saveStatus === 'failed') {\n      setIcon(<ErrorIcon sx={{ color: '#ff7f7f' }} />);\n    } else if (saveStatus === 'saving') {\n      setIcon(<CircularProgress color=\"inherit\" size={24} thickness={6} />);\n    } else {\n      setIcon(<SaveOutlinedIcon />);\n    }\n  }, [saveStatus]);\n\n  return (\n    <Tooltip title=\"Save study records to database\">\n      <IconButton size=\"large\" color=\"inherit\" onClick={onClick}>\n        {icon}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default SaveButton;\n","import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport { IconButton, Tooltip } from '@mui/material';\nimport React from 'react';\n\ninterface SortButtonProps {\n  sortOrder?: 'asc' | 'desc';\n  onClick?: () => void;\n}\n\nfunction SortButton({ sortOrder, onClick }: SortButtonProps) {\n  const tooltipText = sortOrder === 'asc' ? 'Sort series in descending order' : 'Sort series in ascending order';\n\n  return (\n    <Tooltip title={tooltipText}>\n      <IconButton size=\"large\" color=\"inherit\" onClick={onClick}>\n        {sortOrder === 'asc' ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default SortButton;\n","export async function getStudyData(study_instance_uid: string) {\n  // First, try to get the data from localStorage\n  let studyData = localStorage.getItem(`study-${study_instance_uid}`);\n  if (studyData) {\n    return JSON.parse(studyData);\n  }\n\n  // If not in localStorage, try to get the data from the backend server\n  const response = await fetch(\n    `/api/study/${study_instance_uid}`,\n    {\n      method: 'GET',\n      mode: 'cors',\n    });\n  if (response.ok) {\n    studyData = await response.json();\n    if (studyData !== null) {\n      return studyData;\n    }\n  }\n\n  // If the data is not available in both localStorage and backend server, use default values\n  return {\n    study_instance_uid: study_instance_uid,\n    general_comment: '',\n  };\n}\n\nexport async function getSeriesData(seriesInstanceUID: string) {\n  // First, try to get the data from localStorage\n  let seriesData = localStorage.getItem(`series-${seriesInstanceUID}`);\n  if (seriesData) {\n    return JSON.parse(seriesData);\n  }\n\n  // If not in localStorage, try to get the data from the backend server\n  const response = await fetch(\n    `/api/series/${seriesInstanceUID}`,\n    {\n      method: 'GET',\n      mode: 'cors',\n    });\n  if (response.ok) {\n    seriesData = await response.json();\n    if (seriesData !== null) {\n      return seriesData;\n    }\n  }\n\n  // If the data is not available in both localStorage and backend server, use default values\n  return {\n    series_instance_uid: seriesInstanceUID,\n    seq_state: 'pending',\n    is_selected: false,\n    is_expanded: false,\n    measured: new Date().toISOString(),\n    last_updated: new Date().toISOString(),\n    measurement_notes: '',\n    stim_protocol: '',\n    stim_log_file: '',\n    fyzio_raw_file: '',\n    general_eeg: false,\n    general_et: false,\n    bp_ekg: false,\n    bp_resp: false,\n    bp_gsr: false,\n    bp_acc: false,\n    siemens_ekg: false,\n    siemens_resp: false,\n    siemens_gsr: false,\n    siemens_acc: false,\n  };\n}\n\n","import ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ContentPasteIcon from '@mui/icons-material/ContentPaste';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { IconButton, MenuItem, Select, SelectChangeEvent, Tooltip } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport CardActions from '@mui/material/CardActions';\nimport Checkbox from '@mui/material/Checkbox';\nimport Collapse from '@mui/material/Collapse';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport React, { useEffect, useState } from 'react';\nimport CommonCard, { ExpandMore } from '../common/CommonCard';\nimport { MultiLineInput, MultiLineInputProps, SingleLineInput, SingleLineInputProps } from '../common/Inputs';\nimport { getSeriesData } from '../../utils/DatabaseFetchers';\n\nexport function SeriesSingleLineInput({ name, label, value, onChange }: SingleLineInputProps) {\n  return (\n    <Box m={1} flexGrow={1}>\n      <SingleLineInput\n        name={name}\n        label={label}\n        value={value}\n        onChange={onChange}\n      />\n    </Box >\n  );\n}\n\nexport function SeriesMultiLineInput({ name, label, value, onChange }: MultiLineInputProps) {\n  return (\n    <Box m={1} flexGrow={1}>\n      <MultiLineInput\n        name={name}\n        label={label}\n        value={value}\n        onChange={onChange}\n      />\n    </Box>\n  )\n}\n\ninterface CheckboxInputProps {\n  text: string;\n  checked: boolean;\n  name: string;\n}\n\nexport interface SeriesProps {\n  SeriesInstanceUID: string;\n  SequenceFileName: string;\n  AcquisitionMatrix: number[];\n  BodyPartExamined: string;\n  FlipAngle: string;\n  ImageType: string[];\n  InversionTime: number | null;\n  NumberOfSeriesRelatedInstances: number;\n  OperatorsName: string;\n  PAT: string;\n  PatientPosition: string;\n  PercentPhaseFieldOfView: string;\n  ProtocolName: string;\n  RepetitionTime: string;\n  SOPClassUID: string;\n  SeriesDescription: string;\n  SeriesNumber: number;\n  SeriesTime: string;\n  SliceThickness: string;\n  SoftwareVersions: string;\n  SpacingBetweenSlices: number | null;\n  StationName: string;\n  onCopy: (seriesId: string) => void; // onCopy handler passed from parent component\n  onPaste: () => string | null; // onPaste handler passed from parent component\n}\n\n\nexport interface SeriesData {\n  series_instance_uid: string;\n  seq_state: string;\n  is_selected: boolean;\n  is_expanded: boolean;\n  measured: Date;\n  last_updated: Date;\n  measurement_notes: string;\n  stim_protocol: string;\n  stim_log_file: string;\n  fyzio_raw_file: string;\n  general_eeg: boolean;\n  general_et: boolean;\n  bp_ekg: boolean;\n  bp_resp: boolean;\n  bp_gsr: boolean;\n  bp_acc: boolean;\n  siemens_ekg: boolean;\n  siemens_resp: boolean;\n  siemens_gsr: boolean;\n  siemens_acc: boolean;\n}\n\nexport function Series(props: SeriesProps) {\n  type SeriesStateEnum = 'successful' | 'failed' | 'pending';\n\n  function CheckboxInput({ text, checked, name }: CheckboxInputProps) {\n    return (\n      <Box>\n        <FormControlLabel control={\n          <Checkbox\n            checked={checked}\n            onChange={handleCheckboxChange}\n            name={name}\n            color=\"primary\"\n          />\n        } label={text} />\n      </Box>\n    )\n  }\n\n  const [seriesData, setSeriesData] = useState<SeriesData>({\n    // Default values\n    series_instance_uid: props.SeriesInstanceUID,\n    seq_state: 'pending',\n    is_selected: false,\n    is_expanded: false,\n    measured: new Date(),\n    last_updated: new Date(),\n    measurement_notes: '',\n    stim_protocol: '',\n    stim_log_file: '',\n    fyzio_raw_file: '',\n    general_eeg: false,\n    general_et: false,\n    bp_ekg: false,\n    bp_resp: false,\n    bp_gsr: false,\n    bp_acc: false,\n    siemens_ekg: false,\n    siemens_resp: false,\n    siemens_gsr: false,\n    siemens_acc: false,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedSeriesData = await getSeriesData(props.SeriesInstanceUID);\n      setSeriesData(fetchedSeriesData);\n    };\n\n    fetchData();\n  }, [props.SeriesInstanceUID]);\n\n  useEffect(() => {\n    localStorage.setItem(`series-${props.SeriesInstanceUID}`, JSON.stringify(seriesData))\n  }, [seriesData]);\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSeriesData({\n      ...seriesData,\n      [event.target.name]: event.target.checked,\n      last_updated: new Date(),\n    });\n  };\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n    setSeriesData({\n      ...seriesData,\n      [name]: value,\n      last_updated: new Date(),\n    });\n  };\n\n  function handleSeqStateChange(event: SelectChangeEvent<unknown>) {\n    setSeriesData({\n      ...seriesData,\n      seq_state: event.target.value as SeriesStateEnum,\n      last_updated: new Date(),\n    });\n  }\n\n  function handleSeriesClick() {\n    setSeriesData({\n      ...seriesData,\n      is_expanded: !seriesData.is_expanded\n    });\n  }\n\n  const handleSeriesCopy = () => {\n    setSeriesData({\n      ...seriesData,\n      is_selected: !seriesData.is_selected\n    });\n    props.onCopy(`series-${props.SeriesInstanceUID}`); // invoke parent onCopy handler\n  };\n\n  const handleSeriesPaste = () => {\n    const copyFromSeriesId = props.onPaste();\n    if (copyFromSeriesId != null) {\n      const copyFromSeriesStr = localStorage.getItem(copyFromSeriesId);\n      const copy = copyFromSeriesStr ? JSON.parse(copyFromSeriesStr) : {}\n\n      setSeriesData({\n        ...seriesData,\n        measurement_notes: copy.measurement_notes,\n        last_updated: new Date(),\n        stim_protocol: copy.stim_protocol,\n        stim_log_file: copy.stim_log_file,\n        fyzio_raw_file: copy.fyzio_raw_file,\n        general_eeg: copy.general_eeg,\n        general_et: copy.general_et,\n        bp_ekg: copy.bp_ekg,\n        bp_resp: copy.bp_resp,\n        bp_gsr: copy.bp_gsr,\n        bp_acc: copy.bp_acc,\n        siemens_ekg: copy.siemens_ekg,\n        siemens_resp: copy.siemens_resp,\n        siemens_gsr: copy.siemens_gsr,\n        siemens_acc: copy.siemens_acc,\n      });\n    }\n  };\n\n  function getPaperBackgroundColor() {\n    switch (seriesData.seq_state) {\n      case 'pending':\n        return ('rgb(250, 250, 250);')\n      case 'failed':\n        return ('rgb(255, 230, 230);')\n      case 'successful':\n        return ('rgb(230, 255, 230);')\n    }\n  }\n\n  function getSelectColor() {\n    switch (seriesData.seq_state) {\n      case 'pending':\n        return ('grey')\n      case 'failed':\n        return ('red');\n      case 'successful':\n        return ('green');\n    }\n  }\n\n  return (\n    <CommonCard>\n      <Box>\n        <Box m={1} mb={0} display={'flex'} justifyContent={'space-between'} flexDirection={'row'} flexWrap={'wrap'}>\n\n          <Box\n            fontWeight={'bold'}\n            width={Math.max(38, props.SeriesDescription.length + props.SeriesNumber.toString.length) + 'ch'}\n            fontSize={18}\n            whiteSpace={'break-spaces'}\n          >\n            {props.SeriesNumber} | {props.SeriesDescription}\n          </Box>\n\n          <Box color={'grey'} justifyContent='flex-start' fontWeight={'lighter'} fontSize={12}>\n            <Box>Measured: {seriesData.measured.toLocaleString()}</Box>\n            <Box>Last updated: {seriesData.last_updated.toLocaleString()}</Box>\n            <Box>Number of instances: {props.NumberOfSeriesRelatedInstances}</Box>\n          </Box>\n\n          <Box display={'flex'} justifyContent='flex-start' flexDirection={'row'}>\n            <CardActions disableSpacing>\n              <Tooltip title={'Select this measurement for copying of records'}>\n                <IconButton size='large' onClick={handleSeriesCopy}>\n                  <ContentCopyIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title={'Paste records from the selected measurement into this one'}>\n                <IconButton size='large' onClick={handleSeriesPaste}>\n                  <ContentPasteIcon />\n                </IconButton>\n              </Tooltip>\n            </CardActions>\n          </Box>\n          <Box minWidth={140} sx={{\n            background: getPaperBackgroundColor,\n          }}>\n            <Select fullWidth\n              defaultValue={'pending'}\n              value={seriesData.seq_state}\n              onChange={handleSeqStateChange}\n              sx={{ color: getSelectColor }}\n            >\n              <MenuItem value={'successful'}>Successful</MenuItem>\n              <MenuItem value={'failed'}>Failed</MenuItem>\n              <MenuItem value={'pending'}>Pending</MenuItem>\n            </Select>\n          </Box>\n          <CardActions disableSpacing>\n            <ExpandMore\n              expand={seriesData.is_expanded}\n              onClick={handleSeriesClick}\n              aria-expanded={seriesData.is_expanded}\n            >\n              <ExpandMoreIcon />\n            </ExpandMore>\n          </CardActions>\n\n        </Box>\n\n        <Collapse in={seriesData.is_expanded} timeout=\"auto\" unmountOnExit>\n          <Box display={'flex'} flexDirection={'row'} flexWrap={'wrap'}>\n            <SeriesSingleLineInput label='Stim. protocol' name='stim_protocol' value={seriesData.stim_protocol} onChange={handleTextChange} />\n            <SeriesSingleLineInput label='Stim. log file' name='stim_log_file' value={seriesData.stim_log_file} onChange={handleTextChange} />\n            <SeriesSingleLineInput label='Fyzio raw file (for BP)' name='fyzio_raw_file' value={seriesData.fyzio_raw_file} onChange={handleTextChange} />\n            <SeriesMultiLineInput label='Measurement notes' name='measurement_notes' value={seriesData.measurement_notes} onChange={handleTextChange} />\n            <Box m={1}>\n              <Box\n                sx={{\n                  fontWeight: 'bold'\n                }}\n              >\n                General\n              </Box>\n              <Box display={'flex'} flexDirection={'row'}>\n                <CheckboxInput text='EEG' checked={seriesData.general_eeg} name=\"general_eeg\" />\n                <CheckboxInput text='ET' checked={seriesData.general_et} name=\"general_et\" />\n              </Box>\n            </Box>\n            <Box m={1}>\n              <Box\n                sx={{\n                  fontWeight: 'bold'\n                }}\n              >\n                BP ExG\n              </Box>\n              <Box display={'flex'} flexDirection={'row'}>\n                <CheckboxInput text='EKG' checked={seriesData.bp_ekg} name=\"bp_ekg\" />\n                <CheckboxInput text='Resp.' checked={seriesData.bp_resp} name=\"bp_resp\" />\n                <CheckboxInput text='GSR' checked={seriesData.bp_gsr} name=\"bp_gsr\" />\n                <CheckboxInput text='ACC' checked={seriesData.bp_acc} name=\"bp_acc\" />\n              </Box>\n            </Box>\n            <Box m={1}>\n              <Box\n                sx={{\n                  fontWeight: 'bold'\n                }}\n              >\n                Siemens\n              </Box>\n              <Box display={'flex'} flexDirection={'row'}>\n                <CheckboxInput text='EKG' checked={seriesData.siemens_ekg} name=\"siemens_ekg\" />\n                <CheckboxInput text='Resp.' checked={seriesData.siemens_resp} name=\"siemens_resp\" />\n                <CheckboxInput text='GSR' checked={seriesData.siemens_gsr} name=\"siemens_gsr\" />\n                <CheckboxInput text='ACC' checked={seriesData.siemens_acc} name=\"siemens_acc\" />\n              </Box>\n            </Box>\n          </Box>\n        </Collapse>\n      </Box>\n    </CommonCard >\n  )\n}\n","import DateRange from '../components/studies/DateRangeSelector';\n\nexport async function fetchStudies(dateRange: DateRange) {\n  const url = `/api/pacs/studies?start=${dateRange.start}&end=${dateRange.end}`;\n\n  try {\n    const resp = await fetch(\n      url,\n      {\n        method: 'GET',\n        mode: 'cors',\n      });\n    const visits = await resp.json();\n    const parsedVisits = visits.map((visit: any) => {\n      const parsedDate = new Date(visit.StudyDate.substr(0, 4), parseInt(visit.StudyDate.substr(4, 2)) - 1, visit.StudyDate.substr(6, 2));\n      return { ...visit, StudyDate: parsedDate };\n    });\n    return parsedVisits;\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function fetchSeries(accessionNumber: string) {\n  const url = `/api/pacs/series?accession_number=${accessionNumber}`;\n\n  try {\n    const resp = await fetch(\n      url,\n      {\n        method: 'GET',\n        mode: 'cors',\n      });\n    const series = await resp.json();\n    return series;\n  } catch (err) {\n    console.error(err)\n    throw err;\n  }\n}\n","import React from 'react';\nimport { useAuth } from 'react-oidc-context';\nimport { Navigate } from 'react-router-dom';\nimport LoadingBox from '../components/common/LoadingBox';\n\nfunction withAuthentication<P extends object>(\n  WrappedComponent: React.ComponentType<P>\n): React.FunctionComponent<P> {\n  const WithAuth: React.FC<P> = (props) => {\n    const auth = useAuth();\n\n    if (!auth.isLoading && !auth.isAuthenticated) {\n      return <Navigate to=\"/\" replace />;\n    }\n\n    if (auth.isLoading) {\n      return <LoadingBox loadingMessage='Loading...' />;\n    }\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return WithAuth;\n}\n\nexport { withAuthentication };\n","function removeSeriesFromLocalStorage() {\n  const seriesKeys = Object.keys(localStorage).filter((key) => key.startsWith('series-'));\n  seriesKeys.forEach((key) => localStorage.removeItem(key));\n}\n\nexport default removeSeriesFromLocalStorage;\n","function removeStudiesFromLocalStorage() {\n    const seriesKeys = Object.keys(localStorage).filter((key) => key.startsWith('study-'));\n    seriesKeys.forEach((key) => localStorage.removeItem(key));\n}\n\nexport default removeStudiesFromLocalStorage;\n","export async function saveSeriesData(StudyInstanceUID: string): Promise<boolean> {\n  let success = false;\n\n  try {\n    const seriesKeys = Object.keys(localStorage).filter((key) => key.startsWith(`series-${StudyInstanceUID}`));\n    const seriesDataArray = seriesKeys.map((key) => JSON.parse(localStorage.getItem(key) || '{}'));\n\n    const response = await fetch('/api/series', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(seriesDataArray),\n    });\n\n    if (response.ok) {\n      success = true;\n    } else {\n      console.error('Failed to save series data to the database');\n    }\n  } catch (error) {\n    console.error('Error saving series data:', error);\n  }\n\n  return success;\n}\n\nexport async function saveStudyData(StudyInstanceUID: string): Promise<boolean> {\n  let success = false;\n\n  try {\n    const studyDataString = localStorage.getItem(`study-${StudyInstanceUID}`);\n    const studyDataArray = studyDataString ? JSON.parse(studyDataString) : {};\n\n    const response = await fetch('/api/study', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(studyDataArray),\n    });\n\n    if (response.ok) {\n      success = true;\n    } else {\n      console.error('Failed to save study data to the database');\n    }\n  } catch (error) {\n    console.error('Error saving study data:', error);\n  }\n\n  return success;\n}\n","import { Box, Divider } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from 'react-oidc-context';\nimport RefreshButton from '../components/common/RefreshButton';\nimport { BlueButton, RedButton } from '../components/common/Buttons';\nimport InfoItem from '../components/common/InfoItem';\nimport { MultiLineInput } from '../components/common/Inputs';\nimport ListItems from '../components/common/ListItems';\nimport SaveButton from '../components/common/SaveButton';\nimport SortButton from '../components/common/SortButton';\nimport CommonAppBar from '../components/global/AppBarContent';\nimport { ResizableSidebar } from '../components/global/ResizableSidebar';\nimport { Series, SeriesProps } from '../components/series/Series';\nimport { StudyProps } from '../components/studies/Study';\nimport { SidebarProvider } from '../contexts/SidebarContext';\nimport { fetchSeries } from '../utils/PACSFetchers';\nimport { withAuthentication } from '../utils/WithAuthentication';\nimport removeSeriesFromLocalStorage from '../utils/RemoveSeriesFromLocalStorage';\nimport removeStudiesFromLocalStorage from '../utils/RemoveStudiesFromLocalStorage';\nimport { saveSeriesData, saveStudyData } from '../utils/Savers';\nimport { getStudyData } from '../utils/DatabaseFetchers';\n\nexport interface StudyData {\n  study_instance_uid: string;\n  general_comment: string;\n}\n\nfunction Measuring() {\n  const auth = useAuth();\n  const [open, setOpen] = React.useState(true);\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\n  const [seriesJson, setSeriesJson] = useState<SeriesProps[]>([]);\n  const [selectedSeqId, setSelectedSeqId] = React.useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [saveStatus, setSaveStatus] = useState<'idle' | 'saving' | 'success' | 'failed'>('idle');\n  const [fetchStatus, setFetchStatus] = useState<'idle' | 'saving' | 'success' | 'failed'>('idle');\n  const [fetchError, setFetchError] = useState<string | null>(null);\n\n  async function saveRecords(): Promise<boolean> {\n    setSaveStatus('saving');\n    const seriesSuccess = await saveSeriesData(props.StudyInstanceUID);\n    const studySuccess = await saveStudyData(props.StudyInstanceUID);\n\n    if (seriesSuccess && studySuccess) {\n      setSaveStatus('success');\n      return true;\n    }\n\n    setSaveStatus('failed');\n    return false;\n  }\n\n  async function fetchData() {\n    setFetchStatus('saving');\n    const currentStudyString = localStorage.getItem('currentStudy');\n    if (currentStudyString) {\n      try {\n        const currentStudy = JSON.parse(currentStudyString);\n        const json = await fetchSeries(currentStudy.AccessionNumber);\n        // Sort the series by series number, highest (newly added) first\n        json.sort((a: SeriesProps, b: SeriesProps) => a.SeriesNumber - b.SeriesNumber);\n        setFetchError(null);\n        setFetchStatus('success');\n        setSeriesJson(json);\n      } catch (error) {\n        setFetchStatus('failed');\n        setFetchError('Fetching series failed, check internet connection and try again. If problem persists, contact your system administrator.');\n      }\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    // Every 30 seconds, fetch series from PACS-API\n    const interval = setInterval(() => {\n      fetchData();\n    }, 30 * 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  function toggleSortOrder() {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n\n    const sortedData = [...seriesJson];\n    if (newSortOrder === 'asc') {\n      sortedData.sort((a: SeriesProps, b: SeriesProps) => a.SeriesNumber - b.SeriesNumber);\n    } else {\n      sortedData.sort((a: SeriesProps, b: SeriesProps) => b.SeriesNumber - a.SeriesNumber);\n    }\n    setSeriesJson(sortedData);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function handleRefresh() {\n    fetchData();\n  };\n\n  async function handleFinishStudy() {\n    const saveSuccess = await saveRecords();\n    if (saveSuccess) {\n      removeSeriesFromLocalStorage();\n      removeStudiesFromLocalStorage();\n    }\n  }\n\n  async function handleBackToStudies() {\n    const saveSuccess = await saveRecords();\n    if (saveSuccess) {\n      removeSeriesFromLocalStorage();\n      removeStudiesFromLocalStorage();\n    }\n  }\n\n  const handleSeriesCopy = (seqId: string) => {\n    setSelectedSeqId(seqId);\n  };\n\n  const handleSeriesPaste = () => {\n    return selectedSeqId;\n  };\n\n  function listSeries() {\n    return seriesJson.map((series) => (\n      <Series\n        key={series.SeriesInstanceUID}\n        SeriesInstanceUID={series.SeriesInstanceUID}\n        SequenceFileName={series.SequenceFileName}\n        AcquisitionMatrix={series.AcquisitionMatrix}\n        BodyPartExamined={series.BodyPartExamined}\n        FlipAngle={series.FlipAngle}\n        ImageType={series.ImageType}\n        InversionTime={series.InversionTime}\n        NumberOfSeriesRelatedInstances={series.NumberOfSeriesRelatedInstances}\n        OperatorsName={series.OperatorsName}\n        PAT={series.PAT}\n        PatientPosition={series.PatientPosition}\n        PercentPhaseFieldOfView={series.PercentPhaseFieldOfView}\n        ProtocolName={series.ProtocolName}\n        RepetitionTime={series.RepetitionTime}\n        SOPClassUID={series.SOPClassUID}\n        SeriesDescription={series.SeriesDescription}\n        SeriesNumber={series.SeriesNumber}\n        SeriesTime={series.SeriesTime}\n        SliceThickness={series.SliceThickness}\n        SoftwareVersions={series.SoftwareVersions}\n        SpacingBetweenSlices={series.SpacingBetweenSlices}\n        StationName={series.StationName}\n        onCopy={handleSeriesCopy}\n        onPaste={handleSeriesPaste}\n      />\n    ));\n  }\n\n  const [props, setProps] = useState<StudyProps>(() => {\n    const localStudy = localStorage.getItem(`currentStudy`);\n    return localStudy ? JSON.parse(localStudy) : {};\n  });\n\n  const [studyData, setStudyData] = useState<StudyData>({\n    study_instance_uid: props.StudyInstanceUID,\n    general_comment: '',\n  });\n\n  useEffect(() => {\n    (async () => {\n      console.log(`useEffect called with ${props.StudyInstanceUID}`)\n      const fetchedStudyData = await getStudyData(props.StudyInstanceUID);\n      setStudyData(fetchedStudyData);\n    })();\n  }, [props.StudyInstanceUID]);\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n    setStudyData({\n      ...studyData,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(`study-${props.StudyInstanceUID}`, JSON.stringify({ ...studyData }))\n  }, [studyData]);\n\n  return (\n    <SidebarProvider>\n      <React.Fragment>\n        <CommonAppBar\n          open={open}\n          toggleDrawer={toggleDrawer}\n          pageTitle='Measuring and taking notes'\n          content={\n            <React.Fragment>\n              <SortButton sortOrder={sortOrder} onClick={toggleSortOrder} />\n              <SaveButton saveStatus={saveStatus} onClick={saveRecords} />\n              <RefreshButton fetchStatus={fetchStatus} onClick={handleRefresh} tooltipTitle='Re-fetch series for current study' />\n            </React.Fragment>\n          }\n        />\n        <ResizableSidebar\n          open={open}\n          toggleDrawer={toggleDrawer}\n        >\n          <InfoItem label=\"Measuring operator\" text={auth.user ? auth.user.profile.name : ''} />\n          <InfoItem label=\"Visit ID\" text={props.AccessionNumber} />\n          <InfoItem label=\"Study UID\" text={props.StudyInstanceUID} />\n          <InfoItem label=\"Patient name\" text={props.PatientName} />\n          <MultiLineInput\n            label=\"General comment to study\"\n            name=\"general_comment\"\n            value={studyData.general_comment}\n            onChange={handleTextChange}\n          />\n          <Box gap={2} display='flex' flexDirection=\"row\" flexWrap='wrap' justifyContent=\"space-between\">\n            <BlueButton text=\"Finish study\" path=\"/success\" onClick={handleFinishStudy} />\n            <RedButton text=\"Back to studies\" path=\"/studies\" onClick={handleBackToStudies} />\n          </Box>\n          <Divider sx={{ my: 3 }} />\n        </ResizableSidebar>\n        <ListItems\n          loading={loading}\n          list={listSeries()}\n          errorMessage={fetchError}\n          loadingMessage={`Fetching series...`}\n        />\n      </React.Fragment>\n    </SidebarProvider >\n  );\n}\n\nconst ProtectedMeasuring = withAuthentication(Measuring);\nexport default ProtectedMeasuring;\n","// OIDCCallback.tsx\nimport React from \"react\";\nimport { Container } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"react-oidc-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingBox from \"../components/common/LoadingBox\";\n\nfunction OIDCCallback() {\n  const auth = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleUserLoaded = () => {\n      if (auth.user && auth.user.profile) {\n        navigate(\"/studies\");\n      } else {\n        navigate(\"/\");\n      }\n    };\n\n    auth.events.addUserLoaded(handleUserLoaded);\n\n    return () => {\n      // Clean up the event listener when the component is unmounted\n      auth.events.removeUserLoaded(handleUserLoaded);\n    };\n  }, [auth, navigate]);\n\n  return (\n    <Container>\n      <LoadingBox loadingMessage='Signing in...' />\n    </Container>\n  );\n}\n\nexport default OIDCCallback;\n\n","import { Container } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingBox from \"../components/common/LoadingBox\";\n\nconst OidcLogout: React.FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate(\"/\");\n  }, []);\n\n  return (\n    <Container>\n      <LoadingBox loadingMessage='Signing out...' />\n    </Container>\n  );\n};\n\nexport default OidcLogout;\n","import { Box, FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from \"@mui/material\";\nimport { DatePicker } from '@mui/x-date-pickers';\nimport React, { useContext, useEffect, useState } from 'react';\nimport SidebarContext from \"../../contexts/SidebarContext\";\nimport { BlueButton } from \"../common/Buttons\";\n\nexport function formatDateToISOString(date: Date | null): string {\n  if (!date || isNaN(date.getTime())) {\n    return '';\n  }\n\n  const dateString = date.toISOString();\n  const hasMilliseconds = /\\.\\d{3}Z$/;\n\n  if (hasMilliseconds.test(dateString)) {\n    return dateString.slice(0, -5); // Remove the milliseconds and 'Z' at the end\n  }\n\n  return dateString;\n}\n\ntype DateRange = {\n  start: string;\n  end: string;\n};\n\ntype DateRangeChoice = 'hardcoded' | 'past72Hours' | 'custom';\n\ninterface DateRangeSelectorProps {\n  setDateRange: React.Dispatch<React.SetStateAction<{ start: string; end: string }>>;\n  dateRange: { start: string; end: string };\n  fetchData: () => void;\n}\n\nexport function DateRangeSelector({ setDateRange, dateRange, fetchData }: DateRangeSelectorProps) {\n  const [currentChoice, setCurrentChoice] = useState<DateRangeChoice>('past72Hours');\n  const { sidebarWidth } = useContext(SidebarContext);\n\n  // Get past 72 hours on refresh\n  useEffect(() => {\n    setCurrentChoice('past72Hours');\n    setDateRangeChoice(currentChoice);\n  }, []); // The empty array as a dependency ensures this only runs once when the component mounts\n\n  function setDateRangeChoice(choice: DateRangeChoice) {\n    setCurrentChoice(choice);\n    if (choice === 'past72Hours') {\n      const endDate = new Date();\n      const startDate = new Date(endDate);\n      startDate.setHours(endDate.getHours() - 72);\n      handleCustomDateChange(formatDateToISOString(startDate), formatDateToISOString(endDate));\n      fetchData();\n    }\n  }\n\n  const handleCustomDateChange = (start: string, end: string) => {\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    if (!(isNaN(startDate.getTime()) || isNaN(endDate.getTime()))) {\n      setDateRange({ start, end });\n    }\n  };\n\n  const handleFetchButtonClick = () => {\n    fetchData();\n  };\n\n  return (\n    <React.Fragment>\n      <Box\n        gap={2}\n        display='flex'\n        flexWrap='wrap'\n        flexDirection='row'\n      >\n        <Box>\n          <FormControl>\n            <InputLabel>Date Range</InputLabel>\n            <Select\n              label={'Date Range'}\n              value={currentChoice}\n              onChange={(e: SelectChangeEvent<DateRangeChoice>) =>\n                setDateRangeChoice(e.target.value as DateRangeChoice)\n              }\n              style={{\n                maxWidth: `${sidebarWidth - 40}px`,\n              }}\n            >\n              <MenuItem value={'past72Hours'}>Past 72 Hours</MenuItem>\n              <MenuItem value={'custom'}>Custom</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n        {currentChoice === 'custom' && (\n          <React.Fragment>\n            <Box>\n              <DatePicker\n                label=\"Start Date\"\n                value={new Date(dateRange.start)}\n                onChange={(newValue: Date | null) => {\n                  handleCustomDateChange(formatDateToISOString(newValue), dateRange.end);\n                }}\n              />\n            </Box>\n            <Box>\n              <DatePicker\n                label=\"End Date\"\n                value={new Date(dateRange.end)}\n                onChange={(newValue: Date | null) => {\n                  handleCustomDateChange(dateRange.start, formatDateToISOString(newValue));\n                }}\n              />\n            </Box>\n          </React.Fragment>\n        )}\n      </Box>\n      <BlueButton onClick={handleFetchButtonClick} text=\"Fetch studies\" />\n    </React.Fragment>\n  );\n}\n\nexport default DateRange;\n","import Box from '@mui/material/Box';\nimport { Link } from 'react-router-dom';\nimport CommonCard, { Attribute } from '../common/CommonCard';\nimport React from 'react';\n\nexport interface StudyProps {\n  StudyInstanceUID: string;\n  AccessionNumber: string;\n  InstitutionName: string;\n  NumberOfStudyRelatedSeries: number | null;\n  PatientBirthDate: string;\n  PatientID: string;\n  PatientName: string;\n  PatientSex: string;\n  ReferringPhysicianName: string;\n  StudyDate: Date;\n  StudyTime: string;\n  StudyDescription: string;\n  StudyID: string;\n}\n\nexport function Study(props: StudyProps) {\n  const {\n    StudyInstanceUID,\n    AccessionNumber,\n    InstitutionName,\n    NumberOfStudyRelatedSeries,\n    PatientBirthDate,\n    PatientID,\n    PatientName,\n    PatientSex,\n    ReferringPhysicianName,\n    StudyDate,\n    StudyTime,\n    StudyDescription,\n    StudyID,\n  } = props;\n\n  const handleClick = () => {\n    localStorage.setItem('currentStudy', JSON.stringify(props));\n  };\n\n  return (\n    <Link to='/measuring' style={{ textDecoration: 'none' }} onClick={handleClick}>\n      <CommonCard>\n        <Box>\n          <Box m={1} mb={0} display={'flex'} justifyContent={'flex-start'} flexDirection={'row'} gap={3} flexWrap={'wrap'}>\n\n            <Attribute title='Name of patient' text={PatientName} />\n            <Attribute title='Visit ID' text={AccessionNumber} />\n\n            <Box color={'grey'} justifyContent='flex-start' fontWeight={'lighter'} fontSize={12}>\n              <Box>Date of visit: {StudyDate.toLocaleDateString()}</Box>\n            </Box>\n\n          </Box>\n        </Box>\n      </CommonCard >\n    </Link >\n  )\n}\n\n","import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport React, { useEffect, useState } from 'react';\nimport ListItems from '../components/common/ListItems';\nimport CommonAppBar from '../components/global/AppBarContent';\nimport { ResizableSidebar } from '../components/global/ResizableSidebar';\nimport { DateRangeSelector, formatDateToISOString } from '../components/studies/DateRangeSelector';\nimport { Study, StudyProps } from '../components/studies/Study';\nimport { SidebarProvider } from '../contexts/SidebarContext';\nimport { fetchStudies } from '../utils/PACSFetchers';\nimport LoginButton from '../components/common/LoginButton';\nimport RefreshButton from '../components/common/RefreshButton';\nimport { withAuthentication } from '../utils/WithAuthentication';\nimport { BlueButton } from '../components/common/Buttons';\n\nfunction Studies() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n  const [loading, setLoading] = useState(true);\n  const [fetchStatus, setFetchStatus] = useState<'idle' | 'saving' | 'success' | 'failed'>('idle');\n  const [studiesJson, setStudiesJson] = useState<StudyProps[]>([]);\n  const [fetchError, setFetchError] = useState<string | null>(null);\n\n  const endDate = new Date();\n  const startDate = new Date(endDate);\n  startDate.setHours(endDate.getHours() - 72);\n  const [dateRange, setDateRange] = useState({\n    start: formatDateToISOString(startDate),\n    end: formatDateToISOString(endDate),\n  });\n\n  async function fetchData() {\n    setLoading(true);\n    setFetchStatus('saving');\n    try {\n      const json = await fetchStudies(dateRange);\n      // Sort the studies by date, newest first\n      json.sort((a: { StudyDate: Date; }, b: { StudyDate: Date; }) => new Date(b.StudyDate).getTime() - new Date(a.StudyDate).getTime());\n      setStudiesJson(json);\n      setFetchError(null);\n      setFetchStatus('success');\n    } catch (error) {\n      setFetchStatus('failed');\n      setFetchError('Fetching studies failed, check internet connection and make sure you are connected through MUNI VPN. Then try again. It is also possible the date range is too wide to fetch in a reasonable amount of time. If problem persists, contact your system administrator.');\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function handleRefresh() {\n    fetchData();\n  };\n\n  const studies = studiesJson.map((study) => (\n    <Study\n      key={study.StudyInstanceUID}\n      StudyInstanceUID={study.StudyInstanceUID}\n      AccessionNumber={study.AccessionNumber}\n      InstitutionName={study.InstitutionName}\n      NumberOfStudyRelatedSeries={study.NumberOfStudyRelatedSeries}\n      PatientBirthDate={study.PatientBirthDate}\n      PatientID={study.PatientID}\n      PatientName={study.PatientName}\n      PatientSex={study.PatientSex}\n      ReferringPhysicianName={study.ReferringPhysicianName}\n      StudyDate={study.StudyDate}\n      StudyTime={study.StudyTime}\n      StudyDescription={study.StudyDescription}\n      StudyID={study.StudyID}\n    />\n  ));\n\n  return (\n    <SidebarProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <React.Fragment>\n          <CommonAppBar\n            open={open}\n            toggleDrawer={toggleDrawer}\n            pageTitle='Choosing a study'\n            content={\n              <RefreshButton fetchStatus={fetchStatus} onClick={handleRefresh} tooltipTitle='Fetch studies for the chosen timeframe' />\n            }\n          />\n          <ResizableSidebar\n            open={open}\n            toggleDrawer={toggleDrawer}\n          >\n            <LoginButton />\n            <DateRangeSelector\n              dateRange={dateRange}\n              setDateRange={setDateRange}\n              fetchData={fetchData}\n            />\n            {localStorage.getItem('currentStudy') && <BlueButton text=\"Open last accessed study\" path=\"/measuring\" />}\n          </ResizableSidebar>\n          <ListItems\n            loading={loading}\n            list={studies}\n            errorMessage={fetchError}\n            loadingMessage={'Fetching studies...'}\n          />\n        </React.Fragment>\n      </LocalizationProvider>\n    </SidebarProvider>\n  );\n}\n\nconst ProtectedStudies = withAuthentication(Studies);\nexport default ProtectedStudies;\n","import { Box, Toolbar, useTheme } from '@mui/material';\nimport React from 'react';\nimport Message from '../components/common/Message';\nimport CommonAppBar from '../components/global/AppBarContent';\nimport { ResizableSidebar } from '../components/global/ResizableSidebar';\nimport { SidebarProvider } from '../contexts/SidebarContext';\nimport { BlueButton } from '../components/common/Buttons';\nimport LoginButton from '../components/common/LoginButton';\nimport { withAuthentication } from '../utils/WithAuthentication';\n\nfunction SuccessfulVisit() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <SidebarProvider>\n      <React.Fragment>\n        <CommonAppBar\n          open={open}\n          toggleDrawer={toggleDrawer}\n        />\n        <ResizableSidebar\n          open={open}\n          toggleDrawer={toggleDrawer}\n        >\n          <LoginButton />\n          <BlueButton text='Start visit' path='/studies' />\n        </ResizableSidebar>\n        <Box\n          component=\"main\"\n          sx={{\n            flexGrow: 1,\n            overflow: 'auto',\n            height: '100vh',\n          }}\n        >\n          <Toolbar sx={{ minHeight: theme.mixins.toolbar.minHeight }} />\n          <Message title='Study saved successfully' text='Study has been successfully saved to the database. You may log out or choose another visit.' />\n        </Box>\n      </React.Fragment >\n    </SidebarProvider>\n  );\n}\n\nconst ProtectedSuccessfulVisit = withAuthentication(SuccessfulVisit);\nexport default ProtectedSuccessfulVisit","import Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport 'fontsource-roboto';\nimport oidcConfig from './oidcConfig';\nimport { AuthProvider } from 'react-oidc-context';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport React from 'react';\nimport Landing from './pages/Landing';\nimport Measuring from './pages/Measuring';\nimport OIDCCallback from './pages/OidcCallback';\nimport OidcLogout from './pages/OidcLogout';\nimport Studies from './pages/Studies';\nimport SuccessfulVisit from './pages/SuccessfulVisit';\n\nconst App = () => {\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AuthProvider {...oidcConfig}>\n        <BrowserRouter>\n          <Routes>\n            <Route path='/' element={<Landing />} />\n            <Route path='/oidc-login' element={<OIDCCallback />} />\n            <Route path='/oidc-logout' element={<OidcLogout />} />\n            <Route path='/studies' element={<Studies />} />\n            <Route path='/measuring' element={<Measuring />} />\n            <Route path='/success' element={<SuccessfulVisit />} />\n          </Routes>\n        </BrowserRouter>\n      </AuthProvider>\n    </Box>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}